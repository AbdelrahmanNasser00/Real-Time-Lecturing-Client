{"ast":null,"code":"var _jsxFileName = \"/home/abdelrahman/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Room/RoomButtons/ScreenShareButton.js\",\n  _s = $RefreshSig$();\nimport IconButton from \"@mui/material/IconButton\";\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\nimport StopScreenShareIcon from \"@mui/icons-material/StopScreenShare\";\nimport * as webRTCHandler from \"../../../realtimeCommunication/webRTCHandler\";\nimport { useDispatch } from \"react-redux\";\nimport { setScreenSharingStream } from \"../../../store/roomSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constraints = {\n  audio: false,\n  video: true\n};\nconst ScreenShareButton = ({\n  localStream,\n  screenSharingStream,\n  isScreenSharingActive\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const handleScreenShareToggle = async () => {\n    if (!isScreenSharingActive) {\n      let stream = null;\n      try {\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n      } catch (err) {\n        console.log(\"error occured when trying to get an access to screen share stream\");\n      }\n      if (stream) {\n        dispatch(setScreenSharingStream(stream));\n        webRTCHandler.switchOutgoingTracks(stream);\n      }\n    } else {\n      webRTCHandler.switchOutgoingTracks(localStream);\n      screenSharingStream.getTracks().forEach(t => t.stop());\n      setScreenSharingStream(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: handleScreenShareToggle,\n    style: {\n      color: \"white\"\n    },\n    children: isScreenSharingActive ? /*#__PURE__*/_jsxDEV(StopScreenShareIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 58\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ScreenShareButton, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ScreenShareButton;\nexport default ScreenShareButton;\nvar _c;\n$RefreshReg$(_c, \"ScreenShareButton\");","map":{"version":3,"names":["IconButton","ScreenShareIcon","StopScreenShareIcon","webRTCHandler","useDispatch","setScreenSharingStream","jsxDEV","_jsxDEV","constraints","audio","video","ScreenShareButton","localStream","screenSharingStream","isScreenSharingActive","_s","dispatch","handleScreenShareToggle","stream","navigator","mediaDevices","getDisplayMedia","err","console","log","switchOutgoingTracks","getTracks","forEach","t","stop","onClick","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abdelrahman/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Room/RoomButtons/ScreenShareButton.js"],"sourcesContent":["import IconButton from \"@mui/material/IconButton\";\r\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\r\nimport StopScreenShareIcon from \"@mui/icons-material/StopScreenShare\";\r\nimport * as webRTCHandler from \"../../../realtimeCommunication/webRTCHandler\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setScreenSharingStream } from \"../../../store/roomSlice\";\r\n\r\nconst constraints = {\r\n  audio: false,\r\n  video: true,\r\n};\r\n\r\nconst ScreenShareButton = ({\r\n  localStream,\r\n  screenSharingStream,\r\n  isScreenSharingActive,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const handleScreenShareToggle = async () => {\r\n    if (!isScreenSharingActive) {\r\n      let stream = null;\r\n      try {\r\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\r\n      } catch (err) {\r\n        console.log(\r\n          \"error occured when trying to get an access to screen share stream\"\r\n        );\r\n      }\r\n\r\n      if (stream) {\r\n        dispatch(setScreenSharingStream(stream));\r\n        webRTCHandler.switchOutgoingTracks(stream);\r\n      }\r\n    } else {\r\n      webRTCHandler.switchOutgoingTracks(localStream);\r\n      screenSharingStream.getTracks().forEach((t) => t.stop());\r\n      setScreenSharingStream(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IconButton onClick={handleScreenShareToggle} style={{ color: \"white\" }}>\r\n      {isScreenSharingActive ? <StopScreenShareIcon /> : <ScreenShareIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ScreenShareButton;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAO,KAAKC,aAAa,MAAM,8CAA8C;AAC7E,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,sBAAsB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAAC;EACzBC,WAAW;EACXC,mBAAmB;EACnBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACH,qBAAqB,EAAE;MAC1B,IAAII,MAAM,GAAG,IAAI;MACjB,IAAI;QACFA,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,eAAe,CAACb,WAAW,CAAC;MACpE,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CACT,mEACF,CAAC;MACH;MAEA,IAAIN,MAAM,EAAE;QACVF,QAAQ,CAACX,sBAAsB,CAACa,MAAM,CAAC,CAAC;QACxCf,aAAa,CAACsB,oBAAoB,CAACP,MAAM,CAAC;MAC5C;IACF,CAAC,MAAM;MACLf,aAAa,CAACsB,oBAAoB,CAACb,WAAW,CAAC;MAC/CC,mBAAmB,CAACa,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;MACxDxB,sBAAsB,CAAC,IAAI,CAAC;IAC9B;EACF,CAAC;EAED,oBACEE,OAAA,CAACP,UAAU;IAAC8B,OAAO,EAAEb,uBAAwB;IAACc,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,EACrEnB,qBAAqB,gBAAGP,OAAA,CAACL,mBAAmB;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG9B,OAAA,CAACN,eAAe;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEjB,CAAC;AAACtB,EAAA,CAjCIJ,iBAAiB;EAAA,QAKJP,WAAW;AAAA;AAAAkC,EAAA,GALxB3B,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}