{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport { setOpenRoom, setRoomDetails, setActiveRooms, setLocalStreamId, setRemoteStreams, setScreenSharingStream } from \"../store/roomSlice\";\nimport * as socketConnection from \"./socketConnection\";\nimport * as webRTCHandler from \"./webRTCHandler\";\nexport const createNewRoom = subjectId => async dispatch => {\n  console.log(\"create-room in room handler before succes function\");\n  const successCallBackFunction = () => {\n    console.log(\"callback function\");\n    dispatch(setOpenRoom(true, true));\n    dispatch(socketConnection.createNewRoom(subjectId));\n    // socketConnection.createNewRoom(subjectId);\n  };\n  await dispatch(webRTCHandler.getLocalStreamPreview(successCallBackFunction));\n};\nexport const newRoomCreated = data => async dispatch => {\n  const {\n    roomDetails\n  } = data;\n  dispatch(setRoomDetails(roomDetails));\n};\nexport const updateActiveRooms = data => (dispatch, getState) => {\n  var _getState$auth$userDe;\n  const {\n    activeRooms\n  } = data;\n\n  // const friends = store.getState().friends.friends;\n  const rooms = [];\n\n  // const userId = store.getState().auth.userDetails?._id;\n  const userName = (_getState$auth$userDe = getState().auth.userDetails) === null || _getState$auth$userDe === void 0 ? void 0 : _getState$auth$userDe.username;\n  activeRooms.forEach(room => {\n    rooms.push({\n      ...room,\n      creatorUsername: userName\n    });\n  });\n  dispatch(setActiveRooms(rooms));\n  console.log(rooms);\n};\nexport const joinRoom = roomId => async dispatch => {\n  const successCallBackFunction = () => {\n    dispatch(setRoomDetails({\n      roomId\n    }));\n    dispatch(setOpenRoom(false, true));\n    socketConnection.joinRoom({\n      roomId\n    });\n  };\n  await dispatch(webRTCHandler.getLocalStreamPreview(successCallBackFunction));\n};\nexport const leaveRoom = () => (dispatch, getState) => {\n  const roomId = getState().room.roomDetails.roomId;\n  const localStream = getState().room.localStream;\n  if (localStream) {\n    localStream.getTracks().forEach(track => track.stop());\n    dispatch(setLocalStreamId(null));\n  }\n  const screenSharingStream = getState().room.screenSharingStream;\n  if (screenSharingStream) {\n    screenSharingStream.getTracks().forEach(track => track.stop());\n    setScreenSharingStream(null);\n  }\n  dispatch(setRemoteStreams([]));\n  webRTCHandler.closeAllConnections();\n  socketConnection.leaveRoom({\n    roomId\n  });\n  dispatch(setRoomDetails(null));\n  dispatch(setOpenRoom(false, false));\n};","map":{"version":3,"names":["useSelector","setOpenRoom","setRoomDetails","setActiveRooms","setLocalStreamId","setRemoteStreams","setScreenSharingStream","socketConnection","webRTCHandler","createNewRoom","subjectId","dispatch","console","log","successCallBackFunction","getLocalStreamPreview","newRoomCreated","data","roomDetails","updateActiveRooms","getState","_getState$auth$userDe","activeRooms","rooms","userName","auth","userDetails","username","forEach","room","push","creatorUsername","joinRoom","roomId","leaveRoom","localStream","getTracks","track","stop","screenSharingStream","closeAllConnections"],"sources":["/media/abdelrahman/7E84C90484C8BFBF/Abdo/faculty/project/Realtime-project/client/Real-Time-Lecturing-Client/client/src/realtimeCommunication/roomHandler.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport {\r\n  setOpenRoom,\r\n  setRoomDetails,\r\n  setActiveRooms,\r\n  setLocalStreamId,\r\n  setRemoteStreams,\r\n  setScreenSharingStream,\r\n} from \"../store/roomSlice\";\r\nimport * as socketConnection from \"./socketConnection\";\r\nimport * as webRTCHandler from \"./webRTCHandler\";\r\n\r\nexport const createNewRoom = (subjectId) => async (dispatch) => {\r\n  console.log(\"create-room in room handler before succes function\");\r\n\r\n  const successCallBackFunction = () => {\r\n    console.log(\"callback function\");\r\n    dispatch(setOpenRoom(true, true));\r\n    dispatch(socketConnection.createNewRoom(subjectId));\r\n    // socketConnection.createNewRoom(subjectId);\r\n  };\r\n\r\n  await dispatch(webRTCHandler.getLocalStreamPreview(successCallBackFunction));\r\n};\r\n\r\nexport const newRoomCreated = (data) => async (dispatch) => {\r\n  const { roomDetails } = data;\r\n  dispatch(setRoomDetails(roomDetails));\r\n};\r\n\r\nexport const updateActiveRooms = (data) => (dispatch, getState) => {\r\n  const { activeRooms } = data;\r\n\r\n  // const friends = store.getState().friends.friends;\r\n  const rooms = [];\r\n\r\n  // const userId = store.getState().auth.userDetails?._id;\r\n  const userName = getState().auth.userDetails?.username;\r\n\r\n  activeRooms.forEach((room) => {\r\n    rooms.push({ ...room, creatorUsername: userName });\r\n  });\r\n\r\n  dispatch(setActiveRooms(rooms));\r\n  console.log(rooms);\r\n};\r\n\r\nexport const joinRoom = (roomId) => async (dispatch) => {\r\n  const successCallBackFunction = () => {\r\n    dispatch(setRoomDetails({ roomId }));\r\n    dispatch(setOpenRoom(false, true));\r\n    socketConnection.joinRoom({ roomId });\r\n  };\r\n  await dispatch(webRTCHandler.getLocalStreamPreview(successCallBackFunction));\r\n};\r\n\r\nexport const leaveRoom = () => (dispatch, getState) => {\r\n  const roomId = getState().room.roomDetails.roomId;\r\n\r\n  const localStream = getState().room.localStream;\r\n  if (localStream) {\r\n    localStream.getTracks().forEach((track) => track.stop());\r\n    dispatch(setLocalStreamId(null));\r\n  }\r\n\r\n  const screenSharingStream = getState().room.screenSharingStream;\r\n  if (screenSharingStream) {\r\n    screenSharingStream.getTracks().forEach((track) => track.stop());\r\n    setScreenSharingStream(null);\r\n  }\r\n\r\n  dispatch(setRemoteStreams([]));\r\n  webRTCHandler.closeAllConnections();\r\n\r\n  socketConnection.leaveRoom({ roomId });\r\n  dispatch(setRoomDetails(null));\r\n  dispatch(setOpenRoom(false, false));\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}