{"ast":null,"code":"var _jsxFileName = \"/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Organizations/CreateOrganization.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../../shared/UI/css/OrganizationsAndSubjects.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styleCreateOrganization = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px 15px\",\n  width: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst CreateOrganization = ({\n  handleCreateOrganization\n}) => {\n  _s();\n  const [subjectCount, setSubjectCount] = useState(1);\n  const [organizationData, setOrganizationData] = useState({\n    name: \"\",\n    subjects: [],\n    adminName: \"\"\n  });\n  const handleAddBtn = () => {\n    setSubjectCount(subjectCount + 1);\n  };\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"name\" || name === \"adminName\") {\n      setOrganizationData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    } else if (name.startsWith(\"subject\")) {\n      // Extract the subject index from the name attribute\n      const subjectIndex = parseInt(name.replace(\"subject\", \"\"), 10);\n      setOrganizationData(prevData => {\n        const newSubjects = [...prevData.subjects];\n        newSubjects[subjectIndex - 1] = value;\n        return {\n          ...prevData,\n          subjects: newSubjects\n        };\n      });\n    }\n  };\n  const handleCreate = () => {\n    if (organizationData.name.trim() !== \"\") {\n      console.log(organizationData);\n      handleCreateOrganization(organizationData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-organization\",\n    style: styleCreateOrganization,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Oraganization name\",\n      value: organizationData.name,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), Array.from({\n      length: subjectCount\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: `subject${index + 1}`,\n      placeholder: `Subject ${index + 1}`,\n      onChange: handleInputChange\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddBtn,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"adminName\",\n      placeholder: \"Admin name\",\n      value: organizationData.adminName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreate,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateOrganization, \"cZC0xlptcwXOPCY/yotkbJDPPwc=\");\n_c = CreateOrganization;\nexport default CreateOrganization;\n\n/*\nimport React, { useState } from \"react\";\nimport \"../../shared/UI/css/OrganizationsAndSubjects.css\";\n\nconst styleCreateOrganization = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px 15px\",\n  width: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nconst CreateOrganization = ({ handleCreateOrganization }) => {\n  const [subjectCount, setSubjectCount] = useState(1);\n  const [organizationData, setOrganizationData] = useState({\n    name: \"\",\n    subjects: [],\n    adminName: \"\",\n  });\n\n  const handleAddBtn = () => {\n    setSubjectCount(subjectCount + 1);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    setOrganizationData((prevData) => {\n      const newSubjects = [...prevData.subjects];\n      newSubjects[index] = value;\n\n      return {\n        ...prevData,\n        subjects: newSubjects,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleCreate = () => {\n    if (organizationData.name.trim() !== \"\") {\n      console.log(organizationData);\n      handleCreateOrganization(organizationData);\n    }\n  };\n\n  return (\n    <div className=\"create-organization\" style={styleCreateOrganization}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Organization name\"\n        value={organizationData.name}\n        onChange={(e) => handleInputChange(e)}\n      />\n      {Array.from({ length: subjectCount }).map((_, index) => (\n        <input\n          key={index}\n          type=\"text\"\n          name={`subject${index + 1}`}\n          placeholder={`Subject ${index + 1}`}\n          onChange={(e) => handleInputChange(e, index)}\n        />\n      ))}\n      <button onClick={handleAddBtn}>+</button>\n      <input\n        type=\"text\"\n        name=\"adminName\"\n        placeholder=\"Admin name\"\n        value={organizationData.adminName}\n        onChange={(e) => handleInputChange(e)}\n      />\n      <button onClick={handleCreate}>Create</button>\n    </div>\n  );\n};\n\nexport default CreateOrganization;\n */\nvar _c;\n$RefreshReg$(_c, \"CreateOrganization\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","styleCreateOrganization","display","flexDirection","padding","width","justifyContent","alignItems","CreateOrganization","handleCreateOrganization","_s","subjectCount","setSubjectCount","organizationData","setOrganizationData","name","subjects","adminName","handleAddBtn","handleInputChange","e","index","value","target","prevData","startsWith","subjectIndex","parseInt","replace","newSubjects","handleCreate","trim","console","log","className","style","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","map","_","onClick","_c","$RefreshReg$"],"sources":["/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Organizations/CreateOrganization.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../../shared/UI/css/OrganizationsAndSubjects.css\";\n\nconst styleCreateOrganization = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px 15px\",\n  width: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nconst CreateOrganization = ({ handleCreateOrganization }) => {\n  const [subjectCount, setSubjectCount] = useState(1);\n  const [organizationData, setOrganizationData] = useState({\n    name: \"\",\n    subjects: [],\n    adminName: \"\",\n  });\n\n  const handleAddBtn = () => {\n    setSubjectCount(subjectCount + 1);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n\n    if (name === \"name\" || name === \"adminName\") {\n      setOrganizationData((prevData) => ({\n        ...prevData,\n        [name]: value,\n      }));\n    } else if (name.startsWith(\"subject\")) {\n      // Extract the subject index from the name attribute\n      const subjectIndex = parseInt(name.replace(\"subject\", \"\"), 10);\n\n      setOrganizationData((prevData) => {\n        const newSubjects = [...prevData.subjects];\n        newSubjects[subjectIndex - 1] = value;\n\n        return {\n          ...prevData,\n          subjects: newSubjects,\n        };\n      });\n    }\n  };\n  const handleCreate = () => {\n    if (organizationData.name.trim() !== \"\") {\n      console.log(organizationData);\n      handleCreateOrganization(organizationData);\n    }\n  };\n  return (\n    <div className=\"create-organization\" style={styleCreateOrganization}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Oraganization name\"\n        value={organizationData.name}\n        onChange={handleInputChange}\n      />\n      {Array.from({ length: subjectCount }).map((_, index) => (\n        <input\n          key={index}\n          type=\"text\"\n          name={`subject${index + 1}`}\n          placeholder={`Subject ${index + 1}`}\n          onChange={handleInputChange}\n        />\n      ))}\n      <button onClick={handleAddBtn}>+</button>\n      <input\n        type=\"text\"\n        name=\"adminName\"\n        placeholder=\"Admin name\"\n        value={organizationData.adminName}\n        onChange={handleInputChange}\n      />\n      <button onClick={handleCreate}>Create</button>\n    </div>\n  );\n};\n\nexport default CreateOrganization;\n\n/*\nimport React, { useState } from \"react\";\nimport \"../../shared/UI/css/OrganizationsAndSubjects.css\";\n\nconst styleCreateOrganization = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  padding: \"10px 15px\",\n  width: \"100%\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nconst CreateOrganization = ({ handleCreateOrganization }) => {\n  const [subjectCount, setSubjectCount] = useState(1);\n  const [organizationData, setOrganizationData] = useState({\n    name: \"\",\n    subjects: [],\n    adminName: \"\",\n  });\n\n  const handleAddBtn = () => {\n    setSubjectCount(subjectCount + 1);\n  };\n\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    setOrganizationData((prevData) => {\n      const newSubjects = [...prevData.subjects];\n      newSubjects[index] = value;\n\n      return {\n        ...prevData,\n        subjects: newSubjects,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleCreate = () => {\n    if (organizationData.name.trim() !== \"\") {\n      console.log(organizationData);\n      handleCreateOrganization(organizationData);\n    }\n  };\n\n  return (\n    <div className=\"create-organization\" style={styleCreateOrganization}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Organization name\"\n        value={organizationData.name}\n        onChange={(e) => handleInputChange(e)}\n      />\n      {Array.from({ length: subjectCount }).map((_, index) => (\n        <input\n          key={index}\n          type=\"text\"\n          name={`subject${index + 1}`}\n          placeholder={`Subject ${index + 1}`}\n          onChange={(e) => handleInputChange(e, index)}\n        />\n      ))}\n      <button onClick={handleAddBtn}>+</button>\n      <input\n        type=\"text\"\n        name=\"adminName\"\n        placeholder=\"Admin name\"\n        value={organizationData.adminName}\n        onChange={(e) => handleInputChange(e)}\n      />\n      <button onClick={handleCreate}>Create</button>\n    </div>\n  );\n};\n\nexport default CreateOrganization;\n */\n"],"mappings":"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C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACjC,EAAA,CAtEIF,kBAAkB;AAAA0C,EAAA,GAAlB1C,kBAAkB;AAwExB,eAAeA,kBAAkB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}