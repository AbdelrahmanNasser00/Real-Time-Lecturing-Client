{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./reducers/authReducer\";\nimport alertReducer from \"./reducers/alertReducer\";\nimport friendsReducer from \"./reducers/friendsReducer\";\nimport roomReducer from \"./reducers/roomReducer\";\nconst rootReducer = {\n  auth: authReducer,\n  alert: alertReducer,\n  friends: friendsReducer,\n  room: roomReducer\n};\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false // You may need to adjust this based on your needs\n  })\n});\nexport default store;\n\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import { combineReducers, createStore, applyMiddleware } from \"redux\";\n// import thunk from \"redux-thunk\";\n\n// import authReducer from \"./reducers/authReducer\";\n// import alertReducer from \"./reducers/alertReducer\";\n// import friendsReducer from \"./reducers/friendsReducer\";\n// import roomReducer from \"./reducers/roomReducer\";\n\n// const rootReducer = combineReducers({\n//   auth: authReducer,\n//   alert: alertReducer,\n//   friends: friendsReducer,\n//   room: roomReducer,\n// });\n\n// const store = createStore(\n//   rootReducer,\n//   composeWithDevTools(applyMiddleware(thunk))\n// );\n\n// export default store;","map":{"version":3,"names":["configureStore","authReducer","alertReducer","friendsReducer","roomReducer","rootReducer","auth","alert","friends","room","store","reducer","middleware","getDefaultMiddleware","serializableCheck"],"sources":["/media/alaa-eldeen/D/Real-Time-Lecturing/client/src/store/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport alertReducer from \"./reducers/alertReducer\";\r\nimport friendsReducer from \"./reducers/friendsReducer\";\r\nimport roomReducer from \"./reducers/roomReducer\";\r\n\r\nconst rootReducer = {\r\n  auth: authReducer,\r\n  alert: alertReducer,\r\n  friends: friendsReducer,\r\n  room: roomReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false, // You may need to adjust this based on your needs\r\n    }),\r\n});\r\n\r\nexport default store;\r\n\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\n// import thunk from \"redux-thunk\";\r\n\r\n// import authReducer from \"./reducers/authReducer\";\r\n// import alertReducer from \"./reducers/alertReducer\";\r\n// import friendsReducer from \"./reducers/friendsReducer\";\r\n// import roomReducer from \"./reducers/roomReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   auth: authReducer,\r\n//   alert: alertReducer,\r\n//   friends: friendsReducer,\r\n//   room: roomReducer,\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   composeWithDevTools(applyMiddleware(thunk))\r\n// );\r\n\r\n// export default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,MAAMC,WAAW,GAAG;EAClBC,IAAI,EAAEL,WAAW;EACjBM,KAAK,EAAEL,YAAY;EACnBM,OAAO,EAAEL,cAAc;EACvBM,IAAI,EAAEL;AACR,CAAC;AAED,MAAMM,KAAK,GAAGV,cAAc,CAAC;EAC3BW,OAAO,EAAEN,WAAW;EACpBO,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE,KAAK,CAAE;EAC5B,CAAC;AACL,CAAC,CAAC;AAEF,eAAeJ,KAAK;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}