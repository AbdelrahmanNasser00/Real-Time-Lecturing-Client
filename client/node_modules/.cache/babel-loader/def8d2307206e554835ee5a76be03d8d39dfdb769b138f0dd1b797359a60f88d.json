{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst roomSlice = createSlice({\n  name: \"room\",\n  initialState: {\n    isUserInRoom: false,\n    isUserRoomCreator: false,\n    roomDetails: null,\n    activeRooms: [],\n    localStream: null,\n    remoteStreams: [],\n    screenSharingStream: null,\n    isScreenSharingActive: false,\n    isFullScreen: false\n  },\n  reducers: {\n    setOpenRoom: (state, action) => {\n      state.isUserInRoom = action.payload.isUserInRoom;\n      state.isUserRoomCreator = action.payload.isUserRoomCreator;\n    },\n    setRoomDetails: (state, action) => {\n      state.roomDetails = action.payload;\n    },\n    setActiveRooms: (state, action) => {\n      state.activeRooms = action.payload;\n    },\n    setLocalStream: (state, action) => {\n      state.localStream = action.payload;\n    },\n    setRemoteStreams: (state, action) => {\n      state.remoteStreams = action.payload;\n    },\n    setScreenShareStream: (state, action) => {\n      state.screenSharingStream = action.payload.screenSharingStream;\n      state.isScreenSharingActive = action.payload.screenSharingStream ? true : false;\n    },\n    toggleFullScreen: state => {\n      state.isFullScreen = !state.isFullScreen;\n    }\n  }\n});\nexport const {\n  setOpenRoom,\n  setRoomDetails,\n  setActiveRooms,\n  setLocalStream,\n  setRemoteStreams,\n  setScreenSharingStream,\n  toggleFullScreen\n} = roomSlice.actions;\nexport default roomSlice.reducer;","map":{"version":3,"names":["createSlice","roomSlice","name","initialState","isUserInRoom","isUserRoomCreator","roomDetails","activeRooms","localStream","remoteStreams","screenSharingStream","isScreenSharingActive","isFullScreen","reducers","setOpenRoom","state","action","payload","setRoomDetails","setActiveRooms","setLocalStream","setRemoteStreams","setScreenShareStream","toggleFullScreen","setScreenSharingStream","actions","reducer"],"sources":["/media/abdelrahman/7E84C90484C8BFBF/Abdo/faculty/project/Realtime-project/client/Real-Time-Lecturing-Client/client/src/store/roomSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst roomSlice = createSlice({\n  name: \"room\",\n  initialState: {\n    isUserInRoom: false,\n    isUserRoomCreator: false,\n    roomDetails: null,\n    activeRooms: [],\n    localStream: null,\n    remoteStreams: [],\n    screenSharingStream: null,\n    isScreenSharingActive: false,\n    isFullScreen: false,\n  },\n\n  reducers: {\n    setOpenRoom: (state, action) => {\n      state.isUserInRoom = action.payload.isUserInRoom;\n      state.isUserRoomCreator = action.payload.isUserRoomCreator;\n    },\n    setRoomDetails: (state, action) => {\n      state.roomDetails = action.payload;\n    },\n    setActiveRooms: (state, action) => {\n      state.activeRooms = action.payload;\n    },\n    setLocalStream: (state, action) => {\n      state.localStream = action.payload;\n    },\n    setRemoteStreams: (state, action) => {\n      state.remoteStreams = action.payload;\n    },\n    setScreenShareStream: (state, action) => {\n      state.screenSharingStream = action.payload.screenSharingStream;\n      state.isScreenSharingActive = action.payload.screenSharingStream\n        ? true\n        : false;\n    },\n    toggleFullScreen: (state) => {\n      state.isFullScreen = !state.isFullScreen;\n    },\n  },\n});\n\nexport const {\n  setOpenRoom,\n  setRoomDetails,\n  setActiveRooms,\n  setLocalStream,\n  setRemoteStreams,\n  setScreenSharingStream,\n  toggleFullScreen,\n} = roomSlice.actions;\n\nexport default roomSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,YAAY,EAAE,KAAK;IACnBC,iBAAiB,EAAE,KAAK;IACxBC,WAAW,EAAE,IAAI;IACjBC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,IAAI;IACjBC,aAAa,EAAE,EAAE;IACjBC,mBAAmB,EAAE,IAAI;IACzBC,qBAAqB,EAAE,KAAK;IAC5BC,YAAY,EAAE;EAChB,CAAC;EAEDC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACX,YAAY,GAAGY,MAAM,CAACC,OAAO,CAACb,YAAY;MAChDW,KAAK,CAACV,iBAAiB,GAAGW,MAAM,CAACC,OAAO,CAACZ,iBAAiB;IAC5D,CAAC;IACDa,cAAc,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACT,WAAW,GAAGU,MAAM,CAACC,OAAO;IACpC,CAAC;IACDE,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDG,cAAc,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACP,WAAW,GAAGQ,MAAM,CAACC,OAAO;IACpC,CAAC;IACDI,gBAAgB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACC,OAAO;IACtC,CAAC;IACDK,oBAAoB,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACL,mBAAmB,GAAGM,MAAM,CAACC,OAAO,CAACP,mBAAmB;MAC9DK,KAAK,CAACJ,qBAAqB,GAAGK,MAAM,CAACC,OAAO,CAACP,mBAAmB,GAC5D,IAAI,GACJ,KAAK;IACX,CAAC;IACDa,gBAAgB,EAAGR,KAAK,IAAK;MAC3BA,KAAK,CAACH,YAAY,GAAG,CAACG,KAAK,CAACH,YAAY;IAC1C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXE,WAAW;EACXI,cAAc;EACdC,cAAc;EACdC,cAAc;EACdC,gBAAgB;EAChBG,sBAAsB;EACtBD;AACF,CAAC,GAAGtB,SAAS,CAACwB,OAAO;AAErB,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}