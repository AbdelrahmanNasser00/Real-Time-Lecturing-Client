{"ast":null,"code":"var _jsxFileName = \"/media/alaa-eldeen/D/Real-Time-Lecturing/Real-Time-Lecturing-Client/client/src/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { styled } from \"@mui/system\";\nimport SideBar from \"./SideBar/SideBar\";\nimport FriendsSideBar from \"./FriendsSideBar/FriendsSideBar\";\nimport SubjectSideBar from \"./SubjectsSideBar/SubjectsSideBar\";\nimport AppBar from \"./AppBar/AppBar\";\nimport { logout } from \"../shared/utils/auth\";\nimport { connect } from \"react-redux\";\nimport { getActions } from \"../store/actions/authActions\";\nimport { connectWithSocketServer } from \"../realtimeCommunication/socketConnection\";\nimport Room from \"./Room/Room\";\n\n// Styled components for spinner\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpinnerWrapper = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100vh\"\n});\nconst Wrapper = styled(\"div\")({\n  width: \"100%\",\n  height: \"100vh\",\n  display: \"flex\",\n  backgroundColor: \"#36393f\"\n});\nconst Spinner = styled(\"div\")({\n  border: \"4px solid rgba(0, 0, 0, 0.1)\",\n  borderTop: \"4px solid #fff\",\n  borderRadius: \"50%\",\n  width: \"50px\",\n  height: \"50px\",\n  animation: \"$spin 1s linear infinite\",\n  \"@keyframes spin\": {\n    from: {\n      transform: \"rotate(0deg)\"\n    },\n    to: {\n      transform: \"rotate(360deg)\"\n    }\n  }\n});\nconst Dashboard = ({\n  setUserDetails,\n  isUserInRoom\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const userDetails = localStorage.getItem(\"user\");\n    if (!userDetails) {\n      logout();\n    } else {\n      const parsedUserDetails = JSON.parse(userDetails);\n      setUserDetails(parsedUserDetails);\n      connectWithSocketServer(parsedUserDetails);\n      document.title = `Real Time Lecturing Dashboard \\n ${parsedUserDetails.username}`;\n      setIsLoading(false);\n    }\n  }, [setUserDetails]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SubjectSideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isUserInRoom && /*#__PURE__*/_jsxDEV(Room, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n_c = Dashboard;\nconst mapStoreStateToProps = ({\n  room\n}) => {\n  return {\n    ...room\n  };\n};\nconst mapActionsToProps = dispatch => {\n  return {\n    ...getActions(dispatch)\n  };\n};\nexport default connect(mapStoreStateToProps, mapActionsToProps)(Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","styled","SideBar","FriendsSideBar","SubjectSideBar","AppBar","logout","connect","getActions","connectWithSocketServer","Room","jsxDEV","_jsxDEV","SpinnerWrapper","display","justifyContent","alignItems","width","height","Wrapper","backgroundColor","Spinner","border","borderTop","borderRadius","animation","from","transform","to","Dashboard","setUserDetails","isUserInRoom","_s","isLoading","setIsLoading","userDetails","localStorage","getItem","parsedUserDetails","JSON","parse","document","title","username","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStoreStateToProps","room","mapActionsToProps","dispatch","$RefreshReg$"],"sources":["/media/alaa-eldeen/D/Real-Time-Lecturing/Real-Time-Lecturing-Client/client/src/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport SideBar from \"./SideBar/SideBar\";\r\nimport FriendsSideBar from \"./FriendsSideBar/FriendsSideBar\";\r\nimport SubjectSideBar from \"./SubjectsSideBar/SubjectsSideBar\";\r\nimport AppBar from \"./AppBar/AppBar\";\r\nimport { logout } from \"../shared/utils/auth\";\r\nimport { connect } from \"react-redux\";\r\nimport { getActions } from \"../store/actions/authActions\";\r\nimport { connectWithSocketServer } from \"../realtimeCommunication/socketConnection\";\r\nimport Room from \"./Room/Room\";\r\n\r\n// Styled components for spinner\r\nconst SpinnerWrapper = styled(\"div\")({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n});\r\nconst Wrapper = styled(\"div\")({\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n  display: \"flex\",\r\n  backgroundColor: \"#36393f\",\r\n});\r\nconst Spinner = styled(\"div\")({\r\n  border: \"4px solid rgba(0, 0, 0, 0.1)\",\r\n  borderTop: \"4px solid #fff\",\r\n  borderRadius: \"50%\",\r\n  width: \"50px\",\r\n  height: \"50px\",\r\n  animation: \"$spin 1s linear infinite\",\r\n  \"@keyframes spin\": {\r\n    from: {\r\n      transform: \"rotate(0deg)\",\r\n    },\r\n    to: {\r\n      transform: \"rotate(360deg)\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Dashboard = ({ setUserDetails, isUserInRoom }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const userDetails = localStorage.getItem(\"user\");\r\n    if (!userDetails) {\r\n      logout();\r\n    } else {\r\n      const parsedUserDetails = JSON.parse(userDetails);\r\n      setUserDetails(parsedUserDetails);\r\n      connectWithSocketServer(parsedUserDetails);\r\n      document.title = `Real Time Lecturing Dashboard \\n ${parsedUserDetails.username}`;\r\n      setIsLoading(false);\r\n    }\r\n  }, [setUserDetails]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <SpinnerWrapper>\r\n        <Spinner />\r\n      </SpinnerWrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* <SideBar /> */}\r\n      {/* <FriendsSideBar /> */}\r\n      <SubjectSideBar />\r\n      <AppBar />\r\n      {isUserInRoom && <Room />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = ({ room }) => {\r\n  return {\r\n    ...room,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    ...getActions(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps, mapActionsToProps)(Dashboard);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}