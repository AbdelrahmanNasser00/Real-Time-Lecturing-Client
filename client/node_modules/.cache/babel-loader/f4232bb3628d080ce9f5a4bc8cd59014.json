{"ast":null,"code":"import store from \"../store/store\";\nimport { setOpenRoom, setRoomDetails, setActiveRooms, setLocalStream, setRemoteStreams, setScreenSharingStream } from \"../store/actions/roomActions\";\nimport * as socketConnection from \"./socketConnection\";\nimport * as webRTCHandler from \"./webRTCHandler\";\nexport const createNewRoom = () => {\n  const successCallBackFunction = () => {\n    store.dispatch(setOpenRoom(true, true));\n    socketConnection.createNewRoom();\n  };\n  webRTCHandler.getLocalStreamPreview(successCallBackFunction);\n};\nexport const newRoomCreated = data => {\n  const {\n    roomDetails\n  } = data;\n  store.dispatch(setRoomDetails(roomDetails));\n};\nexport const updateActiveRooms = data => {\n  var _store$getState$auth$;\n  const {\n    activeRooms\n  } = data;\n  const friends = store.getState().friends.friends;\n  const rooms = [];\n  const userId = (_store$getState$auth$ = store.getState().auth.userDetails) === null || _store$getState$auth$ === void 0 ? void 0 : _store$getState$auth$._id;\n  activeRooms.forEach(room => {\n    rooms.push({\n      ...room,\n      creatorUsername: \"..\"\n    });\n\n    // const isRoomCreatedByMe = room.roomCreator.userId === userId;\n\n    // if (isRoomCreatedByMe) {\n    //   rooms.push({ ...room, creatorUsername: \"..\" });\n    // } else {\n    //   friends.forEach((f) => {\n    //     if (f.id === room.roomCreator.userId) {\n    //       rooms.push({ ...room, creatorUsername: f.username });\n    //     }\n    //   });\n    // }\n  });\n  store.dispatch(setActiveRooms(rooms));\n};\nexport const joinRoom = roomId => {\n  const successCallBackFunction = () => {\n    store.dispatch(setRoomDetails({\n      roomId\n    }));\n    store.dispatch(setOpenRoom(false, true));\n    socketConnection.joinRoom({\n      roomId\n    });\n  };\n  webRTCHandler.getLocalStreamPreview(successCallBackFunction);\n};\nexport const leaveRoom = () => {\n  const roomId = store.getState().room.roomDetails.roomId;\n  const localStream = store.getState().room.localStream;\n  if (localStream) {\n    localStream.getTracks().forEach(track => track.stop());\n    store.dispatch(setLocalStream(null));\n  }\n  const screenSharingStream = store.getState().room.screenSharingStream;\n  if (screenSharingStream) {\n    screenSharingStream.getTracks().forEach(track => track.stop());\n    store.dispatch(setScreenSharingStream(null));\n  }\n  store.dispatch(setRemoteStreams([]));\n  webRTCHandler.closeAllConnections();\n  socketConnection.leaveRoom({\n    roomId\n  });\n  store.dispatch(setRoomDetails(null));\n  store.dispatch(setOpenRoom(false, false));\n};","map":{"version":3,"names":["store","setOpenRoom","setRoomDetails","setActiveRooms","setLocalStream","setRemoteStreams","setScreenSharingStream","socketConnection","webRTCHandler","createNewRoom","successCallBackFunction","dispatch","getLocalStreamPreview","newRoomCreated","data","roomDetails","updateActiveRooms","_store$getState$auth$","activeRooms","friends","getState","rooms","userId","auth","userDetails","_id","forEach","room","push","creatorUsername","joinRoom","roomId","leaveRoom","localStream","getTracks","track","stop","screenSharingStream","closeAllConnections"],"sources":["/media/alaa-eldeen/D/Real-Time-Lecturing/Real-Time-Lecturing-Client/client/src/realtimeCommunication/roomHandler.js"],"sourcesContent":["import store from \"../store/store\";\r\nimport {\r\n  setOpenRoom,\r\n  setRoomDetails,\r\n  setActiveRooms,\r\n  setLocalStream,\r\n  setRemoteStreams,\r\n  setScreenSharingStream,\r\n} from \"../store/actions/roomActions\";\r\nimport * as socketConnection from \"./socketConnection\";\r\nimport * as webRTCHandler from \"./webRTCHandler\";\r\n\r\nexport const createNewRoom = () => {\r\n  const successCallBackFunction = () => {\r\n    store.dispatch(setOpenRoom(true, true));\r\n    socketConnection.createNewRoom();\r\n  };\r\n  webRTCHandler.getLocalStreamPreview(successCallBackFunction);\r\n};\r\n\r\nexport const newRoomCreated = (data) => {\r\n  const { roomDetails } = data;\r\n  store.dispatch(setRoomDetails(roomDetails));\r\n};\r\n\r\nexport const updateActiveRooms = (data) => {\r\n  const { activeRooms } = data;\r\n\r\n  const friends = store.getState().friends.friends;\r\n  const rooms = [];\r\n\r\n  const userId = store.getState().auth.userDetails?._id;\r\n\r\n  activeRooms.forEach((room) => {\r\n    rooms.push({ ...room, creatorUsername: \"..\" });\r\n\r\n    // const isRoomCreatedByMe = room.roomCreator.userId === userId;\r\n\r\n    // if (isRoomCreatedByMe) {\r\n    //   rooms.push({ ...room, creatorUsername: \"..\" });\r\n    // } else {\r\n    //   friends.forEach((f) => {\r\n    //     if (f.id === room.roomCreator.userId) {\r\n    //       rooms.push({ ...room, creatorUsername: f.username });\r\n    //     }\r\n    //   });\r\n    // }\r\n  });\r\n\r\n  store.dispatch(setActiveRooms(rooms));\r\n};\r\n\r\nexport const joinRoom = (roomId) => {\r\n  const successCallBackFunction = () => {\r\n    store.dispatch(setRoomDetails({ roomId }));\r\n    store.dispatch(setOpenRoom(false, true));\r\n    socketConnection.joinRoom({ roomId });\r\n  };\r\n  webRTCHandler.getLocalStreamPreview(successCallBackFunction);\r\n};\r\n\r\nexport const leaveRoom = () => {\r\n  const roomId = store.getState().room.roomDetails.roomId;\r\n\r\n  const localStream = store.getState().room.localStream;\r\n  if (localStream) {\r\n    localStream.getTracks().forEach((track) => track.stop());\r\n    store.dispatch(setLocalStream(null));\r\n  }\r\n\r\n  const screenSharingStream = store.getState().room.screenSharingStream;\r\n  if (screenSharingStream) {\r\n    screenSharingStream.getTracks().forEach((track) => track.stop());\r\n    store.dispatch(setScreenSharingStream(null));\r\n  }\r\n\r\n  store.dispatch(setRemoteStreams([]));\r\n  webRTCHandler.closeAllConnections();\r\n\r\n  socketConnection.leaveRoom({ roomId });\r\n  store.dispatch(setRoomDetails(null));\r\n  store.dispatch(setOpenRoom(false, false));\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}