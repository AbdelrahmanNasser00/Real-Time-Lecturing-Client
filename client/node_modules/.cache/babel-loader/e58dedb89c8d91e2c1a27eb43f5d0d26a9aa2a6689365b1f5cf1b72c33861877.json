{"ast":null,"code":"var _jsxFileName = \"/home/abdelrahman/Documents/client-deployment-2/Real-Time-Lecturing-Client/client/src/authPages/RegisterPage/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport AuthBox from \"../../shared/components/AuthBox\";\nimport RegisterPageInputs from \"./RegisterPageInputs\";\nimport RegisterPageFooter from \"./RegisterPageFooter\";\nimport { validateRegisterForm } from \"../../shared/utils/validators\";\nimport { connect } from \"react-redux\";\nimport { getActions } from \"../../store/actions/authActions\";\nimport { useHistory } from \"react-router-dom\";\nimport VerificationPage from \"./VerificationPage\";\nimport Header from \"../../shared/components/Header\";\nimport RegisterPageHeader from \"./RegisterPageHeader\";\nimport BackGroundImage from \"../../shared/UI/imgs/BACKGROUND.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegisterPage = ({\n  register,\n  verify\n}) => {\n  _s();\n  const history = useHistory();\n  const [mail, setMail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [showValidationCode, setShowValidationCode] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const handleRegister = () => {\n    console.log(\"handle register called\");\n    const userDetails = {\n      mail,\n      password,\n      username\n    };\n    register(userDetails);\n  };\n  const handleVerify = async () => {\n    console.log(\"handle verify called\");\n    const userDetailsString = localStorage.getItem(\"unverifiedUser\");\n    const userDetails = JSON.parse(userDetailsString);\n    userDetails.verificationCode = verificationCode;\n    localStorage.setItem(\"unverifiedUser\", JSON.stringify(userDetails));\n    verify(userDetails, history);\n  };\n  useEffect(() => {\n    setIsFormValid(validateRegisterForm({\n      mail,\n      username,\n      password\n    }));\n  }, [mail, username, password, setIsFormValid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [!showValidationCode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"svg-image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: BackGroundImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AuthBox, {\n          children: [/*#__PURE__*/_jsxDEV(RegisterPageHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: \"white \"\n            },\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RegisterPageInputs, {\n            mail: mail,\n            setMail: setMail,\n            username: username,\n            setUsername: setUsername,\n            password: password,\n            setPassword: setPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RegisterPageFooter, {\n            handleRegister: handleRegister,\n            showValidationCode: showValidationCode,\n            setShowValidationCode: setShowValidationCode,\n            isFormValid: isFormValid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), showValidationCode && /*#__PURE__*/_jsxDEV(VerificationPage, {\n        handleVerify: handleVerify,\n        verificationCode: verificationCode,\n        setVerificationCode: setVerificationCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RegisterPage, \"ESJ5HI1zr6+OYThEujRnuv7Go40=\", false, function () {\n  return [useHistory];\n});\n_c = RegisterPage;\nconst mapActionsToProps = dispatch => {\n  return {\n    ...getActions(dispatch)\n  };\n};\nexport default connect(null, mapActionsToProps)(RegisterPage);\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useEffect","Typography","AuthBox","RegisterPageInputs","RegisterPageFooter","validateRegisterForm","connect","getActions","useHistory","VerificationPage","Header","RegisterPageHeader","BackGroundImage","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterPage","register","verify","_s","history","mail","setMail","username","setUsername","password","setPassword","verificationCode","setVerificationCode","showValidationCode","setShowValidationCode","isFormValid","setIsFormValid","handleRegister","console","log","userDetails","handleVerify","userDetailsString","localStorage","getItem","JSON","parse","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","variant","sx","color","_c","mapActionsToProps","dispatch","$RefreshReg$"],"sources":["/home/abdelrahman/Documents/client-deployment-2/Real-Time-Lecturing-Client/client/src/authPages/RegisterPage/RegisterPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport AuthBox from \"../../shared/components/AuthBox\";\r\nimport RegisterPageInputs from \"./RegisterPageInputs\";\r\nimport RegisterPageFooter from \"./RegisterPageFooter\";\r\nimport { validateRegisterForm } from \"../../shared/utils/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { getActions } from \"../../store/actions/authActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport VerificationPage from \"./VerificationPage\";\r\nimport Header from \"../../shared/components/Header\";\r\nimport RegisterPageHeader from \"./RegisterPageHeader\";\r\nimport BackGroundImage from \"../../shared/UI/imgs/BACKGROUND.png\";\r\n\r\nconst RegisterPage = ({ register, verify }) => {\r\n  const history = useHistory();\r\n\r\n  const [mail, setMail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [showValidationCode, setShowValidationCode] = useState(false);\r\n\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  const handleRegister = () => {\r\n    console.log(\"handle register called\");\r\n    const userDetails = {\r\n      mail,\r\n      password,\r\n      username,\r\n    };\r\n\r\n    register(userDetails);\r\n  };\r\n\r\n  const handleVerify = async () => {\r\n    console.log(\"handle verify called\");\r\n\r\n    const userDetailsString = localStorage.getItem(\"unverifiedUser\");\r\n    const userDetails = JSON.parse(userDetailsString);\r\n    userDetails.verificationCode = verificationCode;\r\n    localStorage.setItem(\"unverifiedUser\", JSON.stringify(userDetails));\r\n\r\n    verify(userDetails, history);\r\n  };\r\n  useEffect(() => {\r\n    setIsFormValid(\r\n      validateRegisterForm({\r\n        mail,\r\n        username,\r\n        password,\r\n      })\r\n    );\r\n  }, [mail, username, password, setIsFormValid]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        {!showValidationCode && (\r\n          <>\r\n            <div className=\"svg-image-container\">\r\n              <img src={BackGroundImage} />\r\n            </div>\r\n            <AuthBox>\r\n              <RegisterPageHeader />\r\n              <Typography variant=\"h5\" sx={{ color: \"white \" }}>\r\n                Create an account\r\n              </Typography>\r\n              <RegisterPageInputs\r\n                mail={mail}\r\n                setMail={setMail}\r\n                username={username}\r\n                setUsername={setUsername}\r\n                password={password}\r\n                setPassword={setPassword}\r\n              />\r\n              <RegisterPageFooter\r\n                handleRegister={handleRegister}\r\n                showValidationCode={showValidationCode}\r\n                setShowValidationCode={setShowValidationCode}\r\n                isFormValid={isFormValid}\r\n              />\r\n            </AuthBox>\r\n          </>\r\n        )}\r\n        {showValidationCode && (\r\n          <VerificationPage\r\n            handleVerify={handleVerify}\r\n            verificationCode={verificationCode}\r\n            setVerificationCode={setVerificationCode}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    ...getActions(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(RegisterPage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}