{"ast":null,"code":"var _s = $RefreshSig$();\nimport io from \"socket.io-client\";\nimport { setSubjects } from \"../store/actions/subjectsActions\";\nimport * as roomHandler from \"./roomHandler\";\nimport * as webRTCHandler from \"./webRTCHandler\";\nimport { socketOpen, socketClose } from \"../store/socketSlice\";\nimport { useDispatch } from \"react-redux\";\nlet socket = null;\nexport const ConnectWithSocketServer = ({\n  userDetails\n}) => {\n  _s();\n  const jwtToken = userDetails.token;\n  const dispatch = useDispatch();\n  console.log(`jwtToken ${jwtToken}`);\n  // socket = io(\"https://realtime-lecturing-api.onrender.com\", {\n  //   auth: {\n  //     token: jwtToken,\n  //   },\n  // });\n  socket = io(\"http://localhost:8080\", {\n    auth: {\n      token: jwtToken\n    }\n  });\n  socket.on(\"connect\", () => {\n    console.log(\"succesfully connected with socket.io server\");\n    console.log(socket.id);\n    dispatch(socketOpen());\n  });\n  socket.on(\"subjects-list\", data => {\n    console.log(\"subjects came\");\n    const {\n      subjects\n    } = data;\n    dispatch(setSubjects(subjects));\n  });\n  socket.on(\"create-room\", data => {\n    console.log(\"create-room event came\");\n    roomHandler.newRoomCreated(data);\n  });\n  socket.on(\"active-rooms\", data => {\n    console.log(\"acitve room event came\", data);\n    roomHandler.updateActiveRooms(data);\n  });\n  socket.on(\"conn-prepare\", data => {\n    const {\n      connUserSocketId\n    } = data;\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, false);\n    socket.emit(\"initialze-connection\", {\n      connUserSocketId: connUserSocketId\n    });\n  });\n  socket.on(\"initialze-connection\", data => {\n    const {\n      connUserSocketId\n    } = data;\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, true);\n  });\n  socket.on(\"conn-signal\", data => {\n    webRTCHandler.handleSignalingData(data);\n  });\n  socket.on(\"room-participant-left\", data => {\n    console.log(\"user left room\");\n    webRTCHandler.handleParticipantLeftRoom(data);\n  });\n  socket.on(\"disconnect\", () => {\n    dispatch(socketClose());\n  });\n};\n_s(ConnectWithSocketServer, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ConnectWithSocketServer;\nexport const createNewRoom = data => {\n  socket.emit(\"create-room\", data);\n};\nexport const joinRoom = data => {\n  socket.emit(\"join-room\", data);\n};\nexport const leaveRoom = data => {\n  socket.emit(\"leave-room\", data);\n};\nexport const signalPeerData = data => {\n  socket.emit(\"conn-signal\", data);\n};\nvar _c;\n$RefreshReg$(_c, \"ConnectWithSocketServer\");","map":{"version":3,"names":["io","setSubjects","roomHandler","webRTCHandler","socketOpen","socketClose","useDispatch","socket","ConnectWithSocketServer","userDetails","_s","jwtToken","token","dispatch","console","log","auth","on","id","data","subjects","newRoomCreated","updateActiveRooms","connUserSocketId","prepareNewPeerConnection","emit","handleSignalingData","handleParticipantLeftRoom","_c","createNewRoom","joinRoom","leaveRoom","signalPeerData","$RefreshReg$"],"sources":["/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/realtimeCommunication/socketConnection.js"],"sourcesContent":["import io from \"socket.io-client\";\r\nimport { setSubjects } from \"../store/actions/subjectsActions\";\r\nimport * as roomHandler from \"./roomHandler\";\r\nimport * as webRTCHandler from \"./webRTCHandler\";\r\nimport { socketOpen, socketClose } from \"../store/socketSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nlet socket = null;\r\n\r\nexport const ConnectWithSocketServer = ({ userDetails }) => {\r\n  const jwtToken = userDetails.token;\r\n  const dispatch = useDispatch();\r\n  console.log(`jwtToken ${jwtToken}`);\r\n  // socket = io(\"https://realtime-lecturing-api.onrender.com\", {\r\n  //   auth: {\r\n  //     token: jwtToken,\r\n  //   },\r\n  // });\r\n  socket = io(\"http://localhost:8080\", {\r\n    auth: {\r\n      token: jwtToken,\r\n    },\r\n  });\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"succesfully connected with socket.io server\");\r\n    console.log(socket.id);\r\n    dispatch(socketOpen());\r\n  });\r\n\r\n  socket.on(\"subjects-list\", (data) => {\r\n    console.log(\"subjects came\");\r\n    const { subjects } = data;\r\n    dispatch(setSubjects(subjects));\r\n  });\r\n\r\n  socket.on(\"create-room\", (data) => {\r\n    console.log(\"create-room event came\");\r\n    roomHandler.newRoomCreated(data);\r\n  });\r\n\r\n  socket.on(\"active-rooms\", (data) => {\r\n    console.log(\"acitve room event came\", data);\r\n    roomHandler.updateActiveRooms(data);\r\n  });\r\n\r\n  socket.on(\"conn-prepare\", (data) => {\r\n    const { connUserSocketId } = data;\r\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, false);\r\n    socket.emit(\"initialze-connection\", { connUserSocketId: connUserSocketId });\r\n  });\r\n\r\n  socket.on(\"initialze-connection\", (data) => {\r\n    const { connUserSocketId } = data;\r\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, true);\r\n  });\r\n\r\n  socket.on(\"conn-signal\", (data) => {\r\n    webRTCHandler.handleSignalingData(data);\r\n  });\r\n\r\n  socket.on(\"room-participant-left\", (data) => {\r\n    console.log(\"user left room\");\r\n    webRTCHandler.handleParticipantLeftRoom(data);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    dispatch(socketClose());\r\n  });\r\n};\r\n\r\nexport const createNewRoom = (data) => {\r\n  socket.emit(\"create-room\", data);\r\n};\r\n\r\nexport const joinRoom = (data) => {\r\n  socket.emit(\"join-room\", data);\r\n};\r\n\r\nexport const leaveRoom = (data) => {\r\n  socket.emit(\"leave-room\", data);\r\n};\r\n\r\nexport const signalPeerData = (data) => {\r\n  socket.emit(\"conn-signal\", data);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}