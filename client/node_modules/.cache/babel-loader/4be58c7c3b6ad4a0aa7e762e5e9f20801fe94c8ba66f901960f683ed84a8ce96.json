{"ast":null,"code":"var _jsxFileName = \"/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Subject/Subject.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { getActions } from \"../store/actions/authActions\";\nimport Spinner from \"../shared/components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { connectWithSocketServer } from \"../realtimeCommunication/socketConnection\";\nimport { logout } from \"../shared/utils/auth\";\nimport \"../shared/UI/css/SubjectPage.css\";\nimport SubjectHeader from \"../shared/components/SubjectHeader\";\nimport MobileSidebar from \"./Sidebars/MobileSidebar\";\nimport SideBar from \"./Sidebars/SideBar\";\nimport Room from \"../Dashboard/Room/Room\";\nimport { setUserDetails } from \"../store/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Subject = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [mobileSidebarWidth, setMobileSidebarWidth] = useState(0);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const dispatch = useDispatch();\n  const isUserInRoom = useSelector(state => state.room.isUserInRoom);\n  const subjects = useSelector(state => state.subjects.subjects);\n  const socketOpen = use;\n  useEffect(() => {\n    const userDetails = localStorage.getItem(\"user\");\n    if (!userDetails) {\n      logout();\n    } else {\n      const parsedUserDetails = JSON.parse(userDetails);\n      dispatch(setUserDetails(parsedUserDetails));\n      if (!socketOpen && !subjects.length) {\n        connectWithSocketServer(parsedUserDetails, dispatch);\n      }\n      setIsLoading(false);\n    }\n  }, [socketOpen, subjects.length, dispatch]);\n  const {\n    id\n  } = useParams();\n  const subject = subjects.find(subject => subject.code === id);\n  const handleFullScreen = () => {\n    setIsFullScreen(!isFullScreen);\n  };\n  if (!subjects.length) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isFullScreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SubjectHeader, {\n        isUserInRoom: isUserInRoom,\n        subject: subject,\n        setMobileSidebarWidth: setMobileSidebarWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desktop-Sidebar\",\n        children: /*#__PURE__*/_jsxDEV(SideBar, {\n          isUserInRoom: isUserInRoom,\n          subject: subject,\n          handleFullScreen: handleFullScreen,\n          isFullScreen: isFullScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-Sidebar\",\n        children: /*#__PURE__*/_jsxDEV(MobileSidebar, {\n          isUserInRoom: isUserInRoom,\n          subject: subject,\n          handleFullScreen: handleFullScreen,\n          width: mobileSidebarWidth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isFullScreen && /*#__PURE__*/_jsxDEV(Room, {\n      handleFullScreen: handleFullScreen,\n      isFullScreen: isFullScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Subject, \"+5tgJaEUKgh1ZXg4XrKlEIrU4NI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n_c = Subject;\nconst mapStoreStateToProps = ({\n  room,\n  subjects,\n  socket\n}) => {\n  return {\n    subjects,\n    room,\n    socketOpen: socket.socketOpen\n  };\n};\nconst mapActionsToProps = dispatch => {\n  return {\n    ...getActions(dispatch)\n  };\n};\nexport default connect(mapStoreStateToProps, mapActionsToProps)(Subject);\nvar _c;\n$RefreshReg$(_c, \"Subject\");","map":{"version":3,"names":["React","useEffect","useState","connect","useDispatch","useSelector","getActions","Spinner","useParams","connectWithSocketServer","logout","SubjectHeader","MobileSidebar","SideBar","Room","setUserDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","Subject","_s","isLoading","setIsLoading","mobileSidebarWidth","setMobileSidebarWidth","isFullScreen","setIsFullScreen","dispatch","isUserInRoom","state","room","subjects","socketOpen","use","userDetails","localStorage","getItem","parsedUserDetails","JSON","parse","length","id","subject","find","code","handleFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","children","className","width","_c","mapStoreStateToProps","socket","mapActionsToProps","$RefreshReg$"],"sources":["/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Subject/Subject.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { getActions } from \"../store/actions/authActions\";\nimport Spinner from \"../shared/components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { connectWithSocketServer } from \"../realtimeCommunication/socketConnection\";\nimport { logout } from \"../shared/utils/auth\";\nimport \"../shared/UI/css/SubjectPage.css\";\nimport SubjectHeader from \"../shared/components/SubjectHeader\";\nimport MobileSidebar from \"./Sidebars/MobileSidebar\";\nimport SideBar from \"./Sidebars/SideBar\";\nimport Room from \"../Dashboard/Room/Room\";\nimport { setUserDetails } from \"../store/authSlice\";\n\nconst Subject = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [mobileSidebarWidth, setMobileSidebarWidth] = useState(0);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const dispatch = useDispatch();\n  const isUserInRoom = useSelector((state) => state.room.isUserInRoom);\n  const subjects = useSelector((state) => state.subjects.subjects);\n  const socketOpen = use;\n\n  useEffect(() => {\n    const userDetails = localStorage.getItem(\"user\");\n\n    if (!userDetails) {\n      logout();\n    } else {\n      const parsedUserDetails = JSON.parse(userDetails);\n      dispatch(setUserDetails(parsedUserDetails));\n      if (!socketOpen && !subjects.length) {\n        connectWithSocketServer(parsedUserDetails, dispatch);\n      }\n      setIsLoading(false);\n    }\n  }, [socketOpen, subjects.length, dispatch]);\n\n  const { id } = useParams();\n\n  const subject = subjects.find((subject) => subject.code === id);\n\n  const handleFullScreen = () => {\n    setIsFullScreen(!isFullScreen);\n  };\n\n  if (!subjects.length) {\n    return <Spinner />;\n  }\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      {!isFullScreen && (\n        <>\n          <SubjectHeader\n            isUserInRoom={isUserInRoom}\n            subject={subject}\n            setMobileSidebarWidth={setMobileSidebarWidth}\n          />\n          <div className=\"desktop-Sidebar\">\n            <SideBar\n              isUserInRoom={isUserInRoom}\n              subject={subject}\n              handleFullScreen={handleFullScreen}\n              isFullScreen={isFullScreen}\n            />\n          </div>\n          <div className=\"mobile-Sidebar\">\n            <MobileSidebar\n              isUserInRoom={isUserInRoom}\n              subject={subject}\n              handleFullScreen={handleFullScreen}\n              width={mobileSidebarWidth}\n            />\n          </div>\n        </>\n      )}\n      {isFullScreen && (\n        <Room handleFullScreen={handleFullScreen} isFullScreen={isFullScreen} />\n      )}\n    </>\n  );\n};\n\nconst mapStoreStateToProps = ({ room, subjects, socket }) => {\n  return {\n    subjects,\n    room,\n    socketOpen: socket.socketOpen,\n  };\n};\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    ...getActions(dispatch),\n  };\n};\n\nexport default connect(mapStoreStateToProps, mapActionsToProps)(Subject);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}