{"ast":null,"code":"var _jsxFileName = \"/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Room/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { styled } from \"@mui/system\";\nimport ResizeRoomButton from \"./ResizeRoomButton\";\nimport VideosContainer from \"./VideosContainer\";\nimport RoomButtons from \"./RoomButtons/RoomButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled(\"div\")({\n  position: \"relative\",\n  borderRadius: \"0px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  backgroundColor: \"#202225\"\n});\n_c = MainContainer;\nconst fullScreenRoomStyle = {\n  width: \"100%\",\n  height: \"100vh\"\n};\nconst minimizedRoomStyle = {\n  width: \"100%\",\n  height: \"calc(100vh - 55px)\"\n};\nconst Room = ({\n  handleFullScreen,\n  isFullScreen\n}) => {\n  _s();\n  const [isRoomMinimized, setIsRoomMinimized] = useState(true);\n  const roomResizeHandler = () => {\n    console.log(isFullScreen);\n    if (!isFullScreen) setIsRoomMinimized(!isRoomMinimized);\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    className: \"room-container\",\n    style: isRoomMinimized ? minimizedRoomStyle : fullScreenRoomStyle,\n    children: [/*#__PURE__*/_jsxDEV(VideosContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResizeRoomButton, {\n      isRoomMinimized: isRoomMinimized,\n      handleRoomResize: roomResizeHandler,\n      handleFullScreen: handleFullScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"m3XoIyHuFkeHh3usHnlD66Y2aPg=\");\n_c2 = Room;\nexport default Room;\nvar _c, _c2;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Room\");","map":{"version":3,"names":["React","useState","styled","ResizeRoomButton","VideosContainer","RoomButtons","jsxDEV","_jsxDEV","MainContainer","position","borderRadius","display","flexDirection","alignItems","justifyContent","backgroundColor","_c","fullScreenRoomStyle","width","height","minimizedRoomStyle","Room","handleFullScreen","isFullScreen","_s","isRoomMinimized","setIsRoomMinimized","roomResizeHandler","console","log","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","handleRoomResize","_c2","$RefreshReg$"],"sources":["/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Room/Room.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport ResizeRoomButton from \"./ResizeRoomButton\";\r\nimport VideosContainer from \"./VideosContainer\";\r\nimport RoomButtons from \"./RoomButtons/RoomButtons\";\r\nconst MainContainer = styled(\"div\")({\r\n  position: \"relative\",\r\n  borderRadius: \"0px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  backgroundColor: \"#202225\",\r\n});\r\n\r\nconst fullScreenRoomStyle = {\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n};\r\n\r\nconst minimizedRoomStyle = {\r\n  width: \"100%\",\r\n  height: \"calc(100vh - 55px)\",\r\n};\r\n\r\nconst Room = ({ handleFullScreen, isFullScreen }) => {\r\n  const [isRoomMinimized, setIsRoomMinimized] = useState(true);\r\n\r\n  const roomResizeHandler = () => {\r\n    console.log(isFullScreen);\r\n    if (!isFullScreen) setIsRoomMinimized(!isRoomMinimized);\r\n  };\r\n\r\n  return (\r\n    <MainContainer\r\n      className=\"room-container\"\r\n      style={isRoomMinimized ? minimizedRoomStyle : fullScreenRoomStyle}>\r\n      <VideosContainer />\r\n      <RoomButtons />\r\n      <ResizeRoomButton\r\n        isRoomMinimized={isRoomMinimized}\r\n        handleRoomResize={roomResizeHandler}\r\n        handleFullScreen={handleFullScreen}\r\n      />\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,aAAa;AACpC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACpD,MAAMC,aAAa,GAAGN,MAAM,CAAC,KAAK,CAAC,CAAC;EAClCO,QAAQ,EAAE,UAAU;EACpBC,YAAY,EAAE,KAAK;EACnBC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,UAAU,EAAE,QAAQ;EACpBC,cAAc,EAAE,QAAQ;EACxBC,eAAe,EAAE;AACnB,CAAC,CAAC;AAACC,EAAA,GARGR,aAAa;AAUnB,MAAMS,mBAAmB,GAAG;EAC1BC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,kBAAkB,GAAG;EACzBF,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAME,IAAI,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM0B,iBAAiB,GAAGA,CAAA,KAAM;IAC9BC,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;IACzB,IAAI,CAACA,YAAY,EAAEG,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACzD,CAAC;EAED,oBACElB,OAAA,CAACC,aAAa;IACZsB,SAAS,EAAC,gBAAgB;IAC1BC,KAAK,EAAEN,eAAe,GAAGL,kBAAkB,GAAGH,mBAAoB;IAAAe,QAAA,gBAClEzB,OAAA,CAACH,eAAe;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnB7B,OAAA,CAACF,WAAW;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf7B,OAAA,CAACJ,gBAAgB;MACfsB,eAAe,EAAEA,eAAgB;MACjCY,gBAAgB,EAAEV,iBAAkB;MACpCL,gBAAgB,EAAEA;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB,CAAC;AAACZ,EAAA,CArBIH,IAAI;AAAAiB,GAAA,GAAJjB,IAAI;AAuBV,eAAeA,IAAI;AAAC,IAAAL,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}