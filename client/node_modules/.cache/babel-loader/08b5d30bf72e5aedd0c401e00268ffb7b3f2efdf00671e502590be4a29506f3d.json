{"ast":null,"code":"var _jsxFileName = \"/home/abdelrahman/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Room/Video.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { styled } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled(\"div\")({\n  height: \"50%\",\n  width: \"50%\",\n  backgroundColor: \"black\",\n  borderRadius: \"15px\",\n  margin: \"10px\"\n});\n_c = MainContainer;\nconst VideoEl = styled(\"video\")({\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: \"15px\"\n});\n_c2 = VideoEl;\nconst Video = ({\n  stream,\n  isLocalStream\n}) => {\n  _s();\n  const videoRef = useRef();\n  useEffect(() => {\n    const video = videoRef.current;\n\n    // Log the stream to check its type\n    console.log(\"Video component received stream:\", stream);\n\n    // Check if the stream is a MediaStream before setting it\n    if (stream instanceof MediaStream) {\n      video.srcObject = stream;\n    } else {\n      console.error(\"Provided stream is not a MediaStream:\", stream);\n    }\n    video.onloadedmetadata = () => {\n      video.play();\n    };\n  }, [stream]);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(VideoEl, {\n      ref: videoRef,\n      autoPlay: true,\n      muted: isLocalStream ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Video, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c3 = Video;\nexport default Video;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"VideoEl\");\n$RefreshReg$(_c3, \"Video\");","map":{"version":3,"names":["React","useEffect","useRef","styled","jsxDEV","_jsxDEV","MainContainer","height","width","backgroundColor","borderRadius","margin","_c","VideoEl","_c2","Video","stream","isLocalStream","_s","videoRef","video","current","console","log","MediaStream","srcObject","error","onloadedmetadata","play","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/home/abdelrahman/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Room/Video.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst MainContainer = styled(\"div\")({\r\n  height: \"50%\",\r\n  width: \"50%\",\r\n  backgroundColor: \"black\",\r\n  borderRadius: \"15px\",\r\n  margin: \"10px\",\r\n});\r\n\r\nconst VideoEl = styled(\"video\")({\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  borderRadius: \"15px\",\r\n});\r\n\r\nconst Video = ({ stream, isLocalStream }) => {\r\n  const videoRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n\r\n    // Log the stream to check its type\r\n    console.log(\"Video component received stream:\", stream);\r\n\r\n    // Check if the stream is a MediaStream before setting it\r\n    if (stream instanceof MediaStream) {\r\n      video.srcObject = stream;\r\n    } else {\r\n      console.error(\"Provided stream is not a MediaStream:\", stream);\r\n    }\r\n\r\n    video.onloadedmetadata = () => {\r\n      video.play();\r\n    };\r\n  }, [stream]);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <VideoEl ref={videoRef} autoPlay muted={isLocalStream ? true : false} />\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGH,MAAM,CAAC,KAAK,CAAC,CAAC;EAClCI,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE,KAAK;EACZC,eAAe,EAAE,OAAO;EACxBC,YAAY,EAAE,MAAM;EACpBC,MAAM,EAAE;AACV,CAAC,CAAC;AAACC,EAAA,GANGN,aAAa;AAQnB,MAAMO,OAAO,GAAGV,MAAM,CAAC,OAAO,CAAC,CAAC;EAC9BK,KAAK,EAAE,MAAM;EACbD,MAAM,EAAE,MAAM;EACdG,YAAY,EAAE;AAChB,CAAC,CAAC;AAACI,GAAA,GAJGD,OAAO;AAMb,MAAME,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAGjB,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACd,MAAMmB,KAAK,GAAGD,QAAQ,CAACE,OAAO;;IAE9B;IACAC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEP,MAAM,CAAC;;IAEvD;IACA,IAAIA,MAAM,YAAYQ,WAAW,EAAE;MACjCJ,KAAK,CAACK,SAAS,GAAGT,MAAM;IAC1B,CAAC,MAAM;MACLM,OAAO,CAACI,KAAK,CAAC,uCAAuC,EAAEV,MAAM,CAAC;IAChE;IAEAI,KAAK,CAACO,gBAAgB,GAAG,MAAM;MAC7BP,KAAK,CAACQ,IAAI,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EAEZ,oBACEX,OAAA,CAACC,aAAa;IAAAuB,QAAA,eACZxB,OAAA,CAACQ,OAAO;MAACiB,GAAG,EAAEX,QAAS;MAACY,QAAQ;MAACC,KAAK,EAAEf,aAAa,GAAG,IAAI,GAAG;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEpB,CAAC;AAAClB,EAAA,CA1BIH,KAAK;AAAAsB,GAAA,GAALtB,KAAK;AA4BX,eAAeA,KAAK;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}