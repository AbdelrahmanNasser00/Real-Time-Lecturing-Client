{"ast":null,"code":"var _jsxFileName = \"/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Subject.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getActions } from \"../store/actions/authActions\";\nimport Spinner from \"../shared/components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { connectWithSocketServer } from \"../realtimeCommunication/socketConnection\";\nimport { logout } from \"../shared/utils/auth\";\nimport \"../shared/UI/css/SubjectPage.css\";\nimport RegularHeaderAndSidebar from \"./Lecture/RegularHeaderAndSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Subject = ({\n  subjects,\n  setUserDetails,\n  room,\n  socketOpen\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  console.log(subjects.subjects);\n  const isUserInRoom = room.isUserInRoom;\n  useEffect(() => {\n    const userDetails = localStorage.getItem(\"user\");\n    if (!userDetails) {\n      logout();\n    } else {\n      const parsedUserDetails = JSON.parse(userDetails);\n      setUserDetails(parsedUserDetails);\n      if (!socketOpen && !subjects.subjects.length) {\n        connectWithSocketServer(parsedUserDetails);\n      }\n      setIsLoading(false);\n    }\n  }, [setUserDetails, socketOpen, subjects.subjects.length]);\n  const {\n    id\n  } = useParams();\n  const subject = subjects.subjects.find(subject => subject.code === id);\n  console.log(\"subject \", subject);\n  if (!subjects.subjects.length) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(RegularHeaderAndSidebar, {\n    isUserInRoom: isUserInRoom,\n    subject: subject\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Subject, \"AClCWUoPZ8NT5p4FgWr7h9Dw1jY=\", false, function () {\n  return [useParams];\n});\n_c = Subject;\nconst mapStoreStateToProps = ({\n  room,\n  subjects,\n  socket\n}) => {\n  return {\n    subjects,\n    room,\n    socketOpen: socket.socketOpen\n  };\n};\nconst mapActionsToProps = dispatch => {\n  return {\n    ...getActions(dispatch)\n  };\n};\nexport default connect(mapStoreStateToProps, mapActionsToProps)(Subject);\nvar _c;\n$RefreshReg$(_c, \"Subject\");","map":{"version":3,"names":["React","useEffect","useState","connect","getActions","Spinner","useParams","connectWithSocketServer","logout","RegularHeaderAndSidebar","jsxDEV","_jsxDEV","Subject","subjects","setUserDetails","room","socketOpen","_s","isLoading","setIsLoading","isFullScreen","setIsFullScreen","console","log","isUserInRoom","userDetails","localStorage","getItem","parsedUserDetails","JSON","parse","length","id","subject","find","code","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStoreStateToProps","socket","mapActionsToProps","dispatch","$RefreshReg$"],"sources":["/home/abdelrahman/Documents/Realtime-project/client/Real-Time-Lecturing-Client/client/src/Dashboard/Subject.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getActions } from \"../store/actions/authActions\";\nimport Spinner from \"../shared/components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { connectWithSocketServer } from \"../realtimeCommunication/socketConnection\";\nimport { logout } from \"../shared/utils/auth\";\nimport \"../shared/UI/css/SubjectPage.css\";\nimport RegularHeaderAndSidebar from \"./Lecture/RegularHeaderAndSidebar\";\n\nconst Subject = ({ subjects, setUserDetails, room, socketOpen }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  console.log(subjects.subjects);\n  const isUserInRoom = room.isUserInRoom;\n\n  useEffect(() => {\n    const userDetails = localStorage.getItem(\"user\");\n\n    if (!userDetails) {\n      logout();\n    } else {\n      const parsedUserDetails = JSON.parse(userDetails);\n      setUserDetails(parsedUserDetails);\n      if (!socketOpen && !subjects.subjects.length) {\n        connectWithSocketServer(parsedUserDetails);\n      }\n      setIsLoading(false);\n    }\n  }, [setUserDetails, socketOpen, subjects.subjects.length]);\n\n  const { id } = useParams();\n\n  const subject = subjects.subjects.find((subject) => subject.code === id);\n  console.log(\"subject \", subject);\n  if (!subjects.subjects.length) {\n    return <Spinner />;\n  }\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <RegularHeaderAndSidebar isUserInRoom={isUserInRoom} subject={subject} />\n  );\n};\n\nconst mapStoreStateToProps = ({ room, subjects, socket }) => {\n  return {\n    subjects,\n    room,\n    socketOpen: socket.socketOpen,\n  };\n};\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    ...getActions(dispatch),\n  };\n};\n\nexport default connect(mapStoreStateToProps, mapActionsToProps)(Subject);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}